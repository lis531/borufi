---
// import { ViewTransitions } from 'astro:transitions';
import { RxPlay, RxPause } from 'react-icons/rx';
---

<head>
    <div id="playlistMain">
        <button id="backButton">Back</button>
        <div>
            <img id="cover" src=>
            <h1 id="playlistTitle"></h1>
            <button id="playPlaylist"><RxPlay/><RxPause/></button>
            <div style="display: flex; flex-direction: row; gap: 5%;"><p id="author"></p><p id="playlistLength">Playlist length</p></div>
            <ol id="songs">
            </ol>
        </div>
    </div>
    <!-- <ViewTransitions /> -->
</head>
    <script>
    const playlistsData = [
        {
            "title": "Boruwa Originals",
            "img": "boruwa_originals.jpg",
            "author": "Artist 1",
            "songs": [
                {
                    "title": "Song 1",
                    "artist": "Artist 1",
                    "source": "./kebsonken.mp3"
                },
                {
                    "title": "Song 2",
                    "artist": "Artist 2",
                    "source": "./kebsonken.mp3"
                }
            ]
        },
        {
            "title": "Modern Boruwas",
            "img": "modern_boruwas.jpg",
            "author": "Artist 2",
            "songs": [
                {
                    "title": "Song 3",
                    "artist": "Artist 3",
                    "source": "./kebsonken.mp3"
                },
                {
                    "title": "Song 4",
                    "artist": "Artist 4",
                    "source": "./kebsonken.mp3"
                }
            ]
        },
        {
            "title": "Boruwa Vocals",
            "img": "boruwa_vocals.jpg",
            "author": "Artist 3",
            "songs": [
                {
                    "title": "Song 5",
                    "artist": "Artist 5",
                    "source": "./kebsonken.mp3"
                },
                {
                    "title": "Song 6",
                    "artist": "Artist 6",
                    "source": "./kebsonken.mp3"
                }
            ]
        },
        {
            "title": "Boruwa For Christmas",
            "img": "christmas_with_boruwa.jpg",
            "author": "Artist 4",
            "songs": [
                {
                    "title": "Song 7",
                    "artist": "Artist 7",
                    "source": "kebsonken.mp3"
                },
                {
                    "title": "Song 8",
                    "artist": "Artist 8",
                    "source": "kebsonken.mp3"
                }
            ]
        }
    ];
    let songPlayBtns = document.querySelectorAll("#playSong");
    console.log(songPlayBtns);
    let backButton = document.getElementById("backButton") as HTMLElement;
    let playlists = document.querySelectorAll("#song") as NodeListOf<HTMLElement>;
    let cover = document.getElementById("cover") as HTMLImageElement;
    let playlistTitle = document.getElementById("playlistTitle") as HTMLElement;
    let author = document.getElementById("author") as HTMLElement;
    let playlistLength = document.getElementById("playlistLength") as HTMLElement;
    let songsContainer = document.getElementById("songs") as HTMLElement;
    let playlistMain = document.getElementById("playlistMain") as HTMLElement;
    let main = document.getElementById("main") as HTMLElement;
    let playPlaylist = document.getElementById("playPlaylist") as HTMLElement;
    
    let playlistId = 0;
    playlistMain.style.display = "none";
    main.style.display = "block";
    
    backButton?.addEventListener("click", () => {
        playlistMain.style.display = "none";
        main.style.display = "block";
    });

    import { RxPlay, RxPause } from 'react-icons/rx';

    function formatDuration(durationInSeconds: number) {
        const minutes = Math.floor(durationInSeconds / 60);
        const seconds = Math.floor(durationInSeconds % 60);
        return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
    }

    const audio = document.getElementById("audio") as HTMLAudioElement;
    const
    function playSong(source: string) {
        if(audio.src != source)
        {
            audio.src = source;
        }
        if()
        {
            audio.play();
            console.log("Playing");
        }
        else{
            audio.pause();
            console.log("Playing2");
        }
    }

    function updatePlaylistInfo() {
        cover.src = playlistsData[playlistId].img;
        playlistTitle.textContent = playlistsData[playlistId].title;
        author.textContent = playlistsData[playlistId].author;
        songsContainer.innerHTML = "";
        playlistsData[playlistId].songs.map((song) => {
            const audio = new Audio(song.source);
            audio.load();
            audio.addEventListener('loadedmetadata', () => {
                songsContainer.innerHTML += `<button id="playSong" data-source='${song.source}'><RxPlay />Play<RxPause /></button><li>${song.title} - ${song.artist} - Length: ${formatDuration(audio.duration)}</li>`;
                let playSongBtns = document.querySelectorAll("#playSong");
                playSongBtns.forEach((playSongBtn) => {
                    playSongBtn.addEventListener("click", () => {
                        playSong(playSongBtn.dataset.source);
                    });
                });
            });
        });
    }
    playPlaylist.addEventListener("click", () => {
        audio.src = (playlistsData[playlistId].songs[0].source);
        if(audio.paused){
            audio.play();
        } else{
            audio.pause();
        }
    });
    playlists.forEach((playlist, index) => {
        playlist.addEventListener("click", () => {
            console.log(playlist.dataset.source);
            playlistId = index;
            playlistMain.style.display = "block";
            main.style.display = "none";
            // window.location.href = "/playlist/" + playlistId;
            updatePlaylistInfo();
        });
    });
</script>
<style>
    #cover{
        width: 10rem;
        height: 10rem;
        border-radius: 1rem;
    }
    #playlistMain{
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 2rem;
    }
    #playlistMain div{
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }
    #playlistMain div p{
        margin: 0;
    }
    #playlistMain div p:first-child{
        font-size: 1.5rem;
    }
    #playlistMain div p:last-child{
        font-size: 1rem;
    }

</style>