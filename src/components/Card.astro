---
import { FaPlay } from 'react-icons/fa';

interface Props {
	title: string;
	author: string;
	source: string;
	img: string;
}

const { title, author, source, img } = Astro.props;
---

<li class="link-card">
	<button id="song" data-source={source}>
		<img src={img}>
		<div>
			<h2>
				{title}
			</h2>
			<p>
				{author}
			</p>
		</div>
		<FaPlay id="playButton" />
	</button>
</li>
<script>
	const audio = document.querySelector('audio');
	if(audio?.onplaying) {
		audio.onplaying = () => {
			const playButton = document.querySelector('#playButton');
			if(playButton != null){
				playButton.innerHTML = `<svg viewBox="0 0 24 24" width="1em" height="1em" fill="currentColor" aria-hidden="true" focusable="false" role="img"><path d="M6 4l15 8-15 8z"></path></svg>`;
			}
		}
	}
</script>
<style>
	.link-card {
		display: flex;
		margin: auto;
		padding: 1px;
		border-radius: 8px;
		max-width: 24ch;
		transition: background-position 20s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > button {
		width: 100%;
		padding: 1.5rem;
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		border: none;
		transition: background-color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		font-family: inherit;
		cursor: pointer;
	}
	#playButton {
		visibility: hidden;
		margin-left: auto;
		font-size: 1.5rem;
		z-index: 10;
	}
	.link-card > button:is(:hover, :focus-within) #playButton {
		visibility: visible;
	}
	svg {
		background-color: black;
		padding: 1rem;
		clip-path: circle(50% at center);
		height: max-content;
		width: max-content;
	}
	div{
		display: flex;
		flex-direction: column;
	}
	img{
		width: 100%;
		height: 100%;
		border-radius: 0.5rem;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover) {
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover) h2 {
		color: var(--accent-light);
	}
	.active{
		color: var(--accent-light) !important;
		background: var(--accent-gradient) !important;
	}
</style>